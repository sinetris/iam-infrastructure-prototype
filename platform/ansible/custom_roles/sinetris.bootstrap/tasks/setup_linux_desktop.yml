---
- name: Install apt-transport-https
  ansible.builtin.apt:
    name: apt-transport-https
    state: present
- name: Download Microsoft Signing Certificate
  ansible.builtin.get_url:
    url: https://packages.microsoft.com/keys/microsoft.asc
    dest: "{{ apt_keyring_path }}/microsoft.asc"
    mode: u=rx,go=r
- name: Dearmor Microsoft Signing Certificate
  become: true
  ansible.builtin.command:
    argv:
      - gpg
      - --output
      - "{{ apt_keyring_share_path }}/microsoft.gpg"
      - --dearmor
      - "{{ apt_keyring_path }}/microsoft.asc"
    creates: "{{ apt_keyring_share_path }}/microsoft.gpg"
- name: Add the VS Code Repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64,arm64,armhf signed-by={{ apt_keyring_share_path }}/microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
    filename: vscode
    mode: u=rw,g=r,o=r
    update_cache: true
- name: Install vscode
  ansible.builtin.apt:
    name: code
    state: present
- name: Ensures /etc/firefox/certificates exists
  ansible.builtin.file:
    path: /etc/firefox/certificates
    state: directory
    mode: u=rwx,g=rwx,o=rx
- name: Create CA certs hard links for Firefox
  ansible.builtin.file:
    src: "{{ system_ca_root_path }}/{{ item }}"
    dest: /etc/firefox/certificates/{{ item }}
    state: hard
    mode: u=rw,g=r,o=r
  no_log: "{{ do_not_log }}"
  loop:
    - "{{ project_name }}-root-ca.crt"
    - "{{ project_name }}-intermediate-ca.crt"
- name: Ensures /etc/firefox/policies exists
  ansible.builtin.file:
    path: /etc/firefox/policies
    state: directory
    mode: u=rwx,g=rwx,o=rx
- name: Install managed policies into Firefox
  ansible.builtin.template:
    src: firefox-policies.json.j2
    dest: /etc/firefox/policies/policies.json
    mode: u=rw,g=r,o=r
  vars:
    custom_ca_paths:
      - /etc/firefox/certificates/{{ project_name }}-root-ca.crt
      - /etc/firefox/certificates/{{ project_name }}-intermediate-ca.crt
- name: Ensures Firefox global preferences folder exists
  ansible.builtin.file:
    path: "{{ firefox_global_preferences_path }}"
    state: directory
    mode: u=rwx,g=rwx,o=rx
- name: Setup Firefox golobal preferences
  ansible.builtin.template:
    src: firefox-preferences.js.j2
    dest: "{{ firefox_global_preferences_file }}"
    mode: u=rw,g=r,o=r
- name: Ensures bin directory exist in user home
  ansible.builtin.file:
    path: /home/{{ desktop_user }}/bin
    state: directory
    mode: u=rwx,g=rwx,o=rx
    owner: "{{ desktop_user }}"
    group: "{{ desktop_user }}"
- name: Copy script to check instance config for desktop_user
  ansible.builtin.copy:
    src: check-linux-desktop-config.sh
    dest: /home/{{ desktop_user }}/bin/check-instance-config.sh
    owner: "{{ desktop_user }}"
    group: "{{ desktop_user }}"
    mode: u=rwx,g=rx,o=
- name: Enable kubectl autocompletion
  ansible.builtin.shell:
    cmd: kubectl completion bash > /etc/bash_completion.d/kubectl
    creates: /etc/bash_completion.d/kubectl
- name: Enable kustomize autocompletion
  ansible.builtin.shell:
    cmd: kustomize completion bash > /etc/bash_completion.d/kustomize
    creates: /etc/bash_completion.d/kustomize
- name: Enable helm autocompletion
  ansible.builtin.shell:
    cmd: helm completion bash > /etc/bash_completion.d/helm
    creates: /etc/bash_completion.d/helm
- name: Create ansible tmp directory for desktop user
  ansible.builtin.file:
    path: "/tmp/.ansible-{{ desktop_user }}/tmp"
    state: directory
    owner: "{{ desktop_user }}"
    group: "{{ ansible_user }}"
    mode: u=rwx,g=rwx,o=
  become: true
- name: Configure iam-demo-tech as default k8s cluster for desktop user
  become: true
  become_user: "{{ desktop_user }}"
  ansible.builtin.lineinfile:
    path: ${HOME}/.bashrc
    regexp: '^export KUBECONFIG='
    line: export KUBECONFIG=~/.kube/config-iam-demo-tech
  vars:
    ansible_remote_tmp: "/tmp/.ansible-{{ desktop_user }}/tmp"
